{"version":3,"sources":["components/RecipeCard/RecipeCard.js","actions/index.js","apikey.js","components/Loading/Loading.js","containers/RecipesContainer/RecipesContainer.js","thunks/loadPastaRecipes.js","thunks/loadPotatoRecipes.js","thunks/loadBreadRecipes.js","containers/Search/Search.js","components/Nav/Nav.js","containers/RecipeDetails/RecipeDetails.js","containers/App/App.js","serviceWorker.js","reducers/index.js","reducers/pastaReducer.js","reducers/potatoReducer.js","reducers/breadReducer.js","reducers/loadingReducer.js","reducers/searchReducer.js","reducers/errorReducer.js","index.js"],"names":["RecipeCard","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleFavorite","isFavorite","state","setState","handleClick","_this$props","recipe","updateFavorites","favoritesFromStorage","JSON","parse","localStorage","getItem","newFavorites","filter","faveRecipe","name","setItem","stringify","updatedFavorites","concat","toConsumableArray","inherits","createClass","key","value","_this2","forEach","favorite","heart","_this$props2","path","react_default","a","createElement","className","style","backgroundImage","image","Link","to","onClick","Component","loadPastaRecipes","recipes","type","loadPotatoRecipes","loadBreadRecipes","loading","bool","isError","Loading","RecipesContainer","searchRecipes","pastaRecipes","potatoRecipes","breadRecipes","toLowerCase","includes","fetchPastaThunk","fetchPotatoThunk","fetchBreadThunk","recipesToDisplay","match","isLoading","searchValue","str","substring","Loading_Loading_Loading","matches","map","RecipeCard_RecipeCard_RecipeCard","uid","favorites","length","category","withRouter","connect","dispatch","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","hits","t0","stop","_x","apply","arguments","Search","handleChange","e","target","placeholder","onChange","Nav","NavLink","activeStyle","color","containers_Search_Search","Redirect","find","obj","params","ingredients","ingredient","src","alt","App","components_Nav_Nav","Switch","Route","exact","render","component","location","containers_RecipeDetails_RecipeDetails","_ref2","_ref3","_ref4","Boolean","window","hostname","rootReducer","combineReducers","undefined","action","cleanPastaRecipes","label","ingredientLines","cleanPotatoRecipes","cleanBreadRecipes","store","createStore","composeWithDevTools","applyMiddleware","thunk","router","es","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea574bb5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './RecipeCard.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport class RecipeCard extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      isFavorite: false\n    }\n  }\n\n  componentDidMount() {\n    const { recipe } = this.props;\n    const favoritesFromStorage = JSON.parse(localStorage.getItem('faves'))\n    if (favoritesFromStorage) {\n      favoritesFromStorage.forEach((favorite)=> {\n        if (favorite.name === recipe.name) {\n          this.toggleFavorite()\n        }\n      })\n    }\n  }\n\n  toggleFavorite = () => {\n    const { isFavorite } = this.state;\n    this.setState({\n      isFavorite: !isFavorite\n    })\n  }\n\n handleClick = () => {\n   const { recipe, updateFavorites } = this.props;\n    const { isFavorite } = this.state;\n    const favoritesFromStorage = JSON.parse(localStorage.getItem('faves'))\n    if (!isFavorite) {\n      if (favoritesFromStorage) {\n        const updatedFavorites = [...favoritesFromStorage, recipe]\n        localStorage.setItem('faves', JSON.stringify(updatedFavorites))\n      } else {\n        localStorage.setItem('faves', JSON.stringify([recipe]))\n      }\n    } else {\n      const newFavorites = favoritesFromStorage.filter((faveRecipe)=> {\n            return faveRecipe.name !== recipe.name \n          })\n        localStorage.setItem('faves', JSON.stringify(newFavorites))       \n      }\n    this.toggleFavorite();\n    updateFavorites();\n  } \n  \n   \n  render() {\n    const { recipe, path } = this.props;\n    const { isFavorite } = this.state;\n    let heart;\n    if (!isFavorite) {\n      heart = \"far fa-heart\";\n    } else {\n      heart = \"fas fa-heart\";\n    }\n    return (\n      <div className=\"recipe-card\" style={{ backgroundImage: `url(${recipe.image})` }}>\n        <div className=\"gradient\"></div>\n        <div className=\"favorites-box\">\n          <Link to={path}><p className=\"recipe-name\">{recipe.name}</p></Link>\n          <i className={heart} onClick={this.handleClick}></i>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.object,\n  updateFavorites: PropTypes.func,\n  path: PropTypes.string\n}\n","export const loadPastaRecipes = (recipes) => ({\n  type: 'LOAD_PASTA_RECIPES',\n  recipes\n})\n\nexport const loadPotatoRecipes = (recipes) => ({\n  type: 'LOAD_POTATO_RECIPES',\n  recipes\n})\n\nexport const loadBreadRecipes = (recipes) => ({\n  type: 'LOAD_BREAD_RECIPES',\n  recipes\n})\n\nexport const loading = (bool) => ({\n  type: 'LOADING',\n  bool\n})\n\nexport const searchRecipes = (searchValue) => ({\n  type: 'SEARCH_RECIPES',\n  searchValue\n})\n\nexport const isError = (bool) => ({\n  type: 'IS_ERROR',\n  bool\n})\n\n\n","export const key = 'a197606b8abb4aeb41aa9f761271a549';","import React from 'react';\nimport './Loading.css';\n\nexport const Loading = () => {\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n      <p className=\"loading\">Loading</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './RecipesContainer.css';\nimport { uid } from 'react-uid';\nimport { RecipeCard } from '../../components/RecipeCard/RecipeCard';\nimport { fetchPastaThunk } from '../../thunks/loadPastaRecipes';\nimport { fetchPotatoThunk } from '../../thunks/loadPotatoRecipes';\nimport { fetchBreadThunk } from '../../thunks/loadBreadRecipes';\nimport { withRouter } from 'react-router-dom';\nimport { Loading } from '../../components/Loading/Loading';\nimport PropTypes from 'prop-types';\n\nclass RecipesContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      updateFavorites: false\n    }\n  }\n\n  async componentDidMount() {\n    this.props.fetchPastaThunk()\n    this.props.fetchPotatoThunk()\n    this.props.fetchBreadThunk()\n  }\n\n  updateFavorites = () => {\n    this.setState({\n      updateFavorites: true\n    })\n  }\n\n  searchRecipes = (value) => {\n    const { pastaRecipes, potatoRecipes, breadRecipes } = this.props;\n    const allRecipes = [...pastaRecipes, ...breadRecipes, ...potatoRecipes];\n    const matches = allRecipes.filter((recipe) => {\n      if (recipe.name.toLowerCase().includes(value)) {\n        return recipe\n      }\n    })\n    return matches\n  }\n\n  render() {\n    const { pastaRecipes, potatoRecipes, breadRecipes, match, isLoading, searchValue, isError } = this.props;\n    let recipes;\n    let recipesToDisplay;\n    let str = match.path.substring(1);\n    if (isError) {\n      recipesToDisplay = <p className=\"sorry\">Sorry, something went wrong</p>\n      return recipesToDisplay\n    }\n    if (isLoading) {\n      return <Loading />\n    } else {\n        if (searchValue) {\n          const matches = this.searchRecipes(searchValue)\n          recipes = this.props[`${str}Recipes`];\n          recipesToDisplay = matches.map((recipe) => {\n            return (<RecipeCard recipe={recipe} key={uid(recipe)} updateFavorites={this.updateFavorites} path={`/${str}/${recipe.name}`} />)\n            })\n        } else if (match.path !== '/' && match.path !== '/favorites') {\n          recipes = this.props[`${str}Recipes`];\n          recipesToDisplay = recipes.map((recipe) => {\n            return (<RecipeCard recipe={recipe} key={uid(recipe)} updateFavorites={this.updateFavorites} path={`/${str}/${recipe.name}`}/>)\n          })\n        } else if (match.path === '/favorites') {\n          recipes = this.props[`${str}Recipes`];\n          const favorites = JSON.parse(localStorage.getItem('faves'))\n            if (favorites === null) {\n              recipesToDisplay = <p className=\"no-favorites\">You have no favorites!</p>\n            }\n            else if (!favorites.length) {\n              recipesToDisplay = <p className=\"no-favorites\">You have no favorites!</p>\n            } else {\n              recipesToDisplay = favorites.map((recipe) => {\n                return (<RecipeCard recipe={recipe} key={uid(recipe)} updateFavorites={this.updateFavorites} path={`/${recipe.category}/${recipe.name}`}/>)\n              }) \n            }\n        } else {\n          recipes = [...pastaRecipes, ...breadRecipes, ...potatoRecipes];\n          recipesToDisplay = recipes.map((recipe) => {\n            return (<RecipeCard recipe={recipe} key={uid(recipe)} updateFavorites={this.updateFavorites} path={`/${recipe.category}/${recipe.name}`}/>)\n          })\n        }\n    \n        return (\n          <div className=\"recipes-container\">\n            { recipesToDisplay }\n          </div>\n        )\n      }\n    }\n      }\n\n\nexport const mapStateToProps = (state) => ({\n  pastaRecipes: state.pastaRecipes,\n  potatoRecipes: state.potatoRecipes,\n  breadRecipes: state.breadRecipes,\n  isLoading: state.isLoading,\n  searchValue: state.searchValue,\n  isError: state.isError\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchPastaThunk: () => dispatch(fetchPastaThunk()),\n  fetchPotatoThunk: () => dispatch(fetchPotatoThunk()),\n  fetchBreadThunk: () => dispatch(fetchBreadThunk())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RecipesContainer))\n\nRecipesContainer.propTypes = {\n  pastaRecipes: PropTypes.array,\n  potatoRecipes: PropTypes.array,\n  breadRecipes: PropTypes.array,\n  isLoading: PropTypes.bool,\n  searchValue: PropTypes.string,\n  isError: PropTypes.bool,\n  fetchPastaThunk: PropTypes.func,\n  fetchPotatoThunk: PropTypes.func,\n  fetchBreadThunk: PropTypes.func\n};","import { loadPastaRecipes, isError } from '../actions/index';\nimport { key } from '../apikey';\n\nexport const fetchPastaThunk = () => {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=pasta&app_id=0f8e1af8&app_key=${key}`)\n      const recipes = await response.json()\n      dispatch(loadPastaRecipes(recipes.hits))   \n    } catch(error) {\n      dispatch(isError(true))\n    }\n  }\n}","import { loadPotatoRecipes, isError } from '../actions/index';\nimport { key } from '../apikey';\n\nexport const fetchPotatoThunk = () => {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=potato&app_id=0f8e1af8&app_key=${key}`)\n      const recipes = await response.json()\n      dispatch(loadPotatoRecipes(recipes.hits))     \n    } catch(error) {\n      dispatch(isError(true))\n    }\n  }\n}","import { loadBreadRecipes } from '../actions/index';\nimport { loading, isError } from '../actions/index';\nimport { key } from '../apikey';\n\nexport const fetchBreadThunk = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(loading(true))\n      const response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=bread&app_id=0f8e1af8&app_key=${key}`)\n      const recipes = await response.json()\n      dispatch(loadBreadRecipes(recipes.hits)) \n      dispatch(loading(false))\n    } catch(error) {\n      dispatch(isError(true))\n    }\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { searchRecipes } from '../../actions/';\nimport './Search.css';\n\nexport class Search extends Component {\n  constructor() {\n    super()\n    this.state = {\n      searchValue: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      searchValue: e.target.value\n    })\n    this.props.searchRecipes(e.target.value.toLowerCase())\n  }\n\n  render() {\n    return (\n      <div className=\"search-div\">\n        <form>\n          <input\n          type=\"text\"\n          placeholder=\"Search Recipes\"\n          value={this.state.searchValue}\n          onChange={this.handleChange}\n          className=\"search-input\">\n          </input>\n        </form>    \n      </div>\n    )\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  searchRecipes: (searchValue) => dispatch(searchRecipes(searchValue))\n})\n\nexport default connect(null, mapDispatchToProps)(Search)","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Search from '../../containers/Search/Search';\nimport './Nav.css';\n\nconst Nav = () => {\n  return(\n    <div className=\"nav-bar\">\n      <div className=\"link\">\n        <NavLink to={'/allRecipes'} activeStyle={{ color: '#D5AD47' }} className=\"nav-link\">All Recipes</NavLink>\n        <NavLink to={'/pasta'} activeStyle={{ color: '#D5AD47' }} className=\"nav-link\">Pasta</NavLink>\n        <NavLink to={'/potato'} activeStyle={{ color: '#D5AD47' }} className=\"nav-link\">Potatoes\n        </NavLink>\n        <NavLink to={'/bread'} activeStyle={{ color: '#D5AD47' }} className=\"nav-link\">Bread\n        </NavLink>\n        <NavLink to={'/favorites'} activeStyle={{ color: '#D5AD47' }} className=\"nav-link\">Favorites\n        </NavLink>\n      </div>\n      <div className=\"search\">\n        <Search />\n      </div>\n    </div>\n  )\n}\n  \nexport default Nav;\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './RecipeDetails.css';\n\nexport const RecipeDetails = (props) => {\n  let category;\n  if(props.pastaRecipes.length) {\n    if (props.match.path.includes('pasta')) {\n      category = props.pastaRecipes\n    } else if (props.match.path.includes('potato')) {\n      category = props.potatoRecipes\n    } else if (props.match.path.includes('bread')) {\n      category = props.breadRecipes\n    } else {\n      return (<Redirect to='/'/>)\n    }\n  } else {\n    return (<Redirect to='/'/>)\n  }\n  const recipe = category.find((obj) => {\n    return obj.name === props.match.params.name\n  })\n    \n  const ingredients = recipe.ingredients.map((ingredient) => {\n    return <li><p className=\"ingredient\">{ingredient}</p></li>\n  })\n\n  return (\n    <div className=\"ingredients-div\">\n      <h1 className=\"recipe-title\">{recipe.name}</h1>\n      <div className=\"recipe-div\">\n        <img src={recipe.image} className=\"img\" alt=\"recipe\"/>\n        <ul className=\"recipe-ingredients\">{ingredients}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  pastaRecipes: state.pastaRecipes,\n  potatoRecipes: state.potatoRecipes,\n  breadRecipes: state.breadRecipes\n})\n\nexport default withRouter(connect(mapStateToProps)(RecipeDetails))\n\nRecipeDetails.propTypes = {\n  pastaRecipes: PropTypes.array,\n  potatoRecipes: PropTypes.array,\n  breadRecipes: PropTypes.array\n}","import React, { Component } from 'react';\nimport RecipesContainer from '../RecipesContainer/RecipesContainer';\nimport Nav from '../../components/Nav/Nav';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport RecipeDetails from '../RecipeDetails/RecipeDetails';\n\nclass App extends Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1 className=\"title\">run4recipes</h1>\n          <h2 className=\"slogan\">HIGH CARB MEAL IDEAS <img src='./images/runner.png' alt=\"runner\" className='main-logo'></img> TO FUEL ANY RUN</h2>\n        </div>\n        <Nav />\n        <Switch>\n          <Route \n            exact\n            path='/allRecipes' \n            render={() => {\n                return <Redirect to='/' />\n            }}\n          />\n          <Route\n            exact\n            path='/pasta'\n            component={RecipesContainer}\n            />\n          <Route\n            exact\n            path='/pasta/:name'\n            render={({ location }) => {\n              return <RecipeDetails />\n            }}\n            />\n          <Route\n            exact\n            path='/potato'\n            component={RecipesContainer}\n          />\n          <Route\n            exact\n            path='/potato/:name'\n            render={({ location }) => {\n              return <RecipeDetails />\n            }}\n            />\n          <Route \n            exact\n            path='/bread'\n            component={RecipesContainer} \n          />\n          <Route\n            exact\n            path='/bread/:name'\n            render={({ location }) => {\n              return <RecipeDetails />\n            }}\n            />\n          <Route\n            path='/favorites'\n            component={RecipesContainer} \n          />\n          <Route \n            exact path='/'\n            component={RecipesContainer} \n          />\n          <Route\n            exact\n            path='/:name'\n            render={({ location }) => {\n              return <RecipeDetails />\n            }}\n            />\n          <Route \n            path='/'\n            component={RecipesContainer} \n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  pastaRecipes: state.pastaRecipes,\n  potatoRecipes: state.potatoRecipes,\n  breadRecipes: state.breadRecipes\n})\n\nexport default withRouter(connect(mapStateToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { pastaReducer } from './pastaReducer';\nimport { potatoReducer } from './potatoReducer';\nimport { breadReducer } from './breadReducer';\nimport { loadingReducer } from './loadingReducer';\nimport { searchReducer } from './searchReducer';\nimport { errorReducer } from './errorReducer';\n\nconst rootReducer = combineReducers({\n  pastaRecipes: pastaReducer,\n  potatoRecipes: potatoReducer,\n  breadRecipes: breadReducer,\n  isLoading: loadingReducer,\n  searchValue: searchReducer,\n  isError: errorReducer\n})\n\nexport default rootReducer","export const pastaReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_PASTA_RECIPES':\n      const cleanPastaRecipes = action.recipes.map((recipe) => {\n        return {\n          name: recipe.recipe.label,\n          image: recipe.recipe.image,\n          ingredients: recipe.recipe.ingredientLines,\n          category: 'pasta'\n        }\n      })\n      return [...state, ...cleanPastaRecipes]\n    default:\n      return state\n  }\n}","export const potatoReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_POTATO_RECIPES':\n      const cleanPotatoRecipes = action.recipes.map((recipe) => {\n        return {\n          name: recipe.recipe.label,\n          image: recipe.recipe.image,\n          ingredients: recipe.recipe.ingredientLines,\n          category: 'potato'\n        }\n      })\n      return [...state, ...cleanPotatoRecipes]\n    default:\n      return state\n  }\n}","export const breadReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_BREAD_RECIPES':\n      const cleanBreadRecipes = action.recipes.map((recipe) => {\n        return {\n          name: recipe.recipe.label,\n          image: recipe.recipe.image,\n          ingredients: recipe.recipe.ingredientLines,\n          category: 'bread'\n        }\n      })\n      return [...state, ...cleanBreadRecipes]\n    default:\n      return state\n  }\n}","export const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return action.bool\n    default:\n      return state\n  }\n}","export const searchReducer = (state= '', action) => {\n  switch (action.type) {\n    case \"SEARCH_RECIPES\":\n      return action.searchValue\n    default:\n      return state\n  }\n}","export const errorReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_ERROR':\n      return action.bool\n    default: return state\n  } \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/index'\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nconst router = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path='/' component={App} />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}